title = 'Plano da Propriedade',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
legend('topleft', legend = features$idRecomendacao)
dev.off()
features$idRecomendacao
limites
png(filename = str_c(idPlano,'.png'), height = 20, width = 20, units = 'cm', res = 200)
prettymap({
plot(bound, axes=T)
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i])
}
},
title = 'Plano da Propriedade',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
legend(limites[1,2], limites[2,2], legend = features$idRecomendacao)
dev.off()
png(filename = str_c(idPlano,'.png'), height = 20, width = 20, units = 'cm', res = 200)
prettymap({
plot(bound, axes=T)
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i])
}
},
title = 'Plano da Propriedade',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
legend(limites[1,1], limites[2,1], legend = features$idRecomendacao)
dev.off()
png(filename = str_c(idPlano,'.png'), height = 20, width = 20, units = 'cm', res = 200)
prettymap({
plot(bound, axes=T)
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i])
}
},
title = 'Plano da Propriedade',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
legend(limites[1,1], limites[2,2], legend = features$idRecomendacao)
dev.off()
png(filename = str_c(idPlano,'.png'), height = 20, width = 20, units = 'cm', res = 200)
prettymap({
plot(bound, axes=T)
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i])
}
},
title = 'Plano da Propriedade',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
legend(limites[1,1], limites[2,2],
legend = features$idRecomendacao,
fill = NA, border = features$cor)
dev.off()
png(filename = str_c(idPlano,'.png'), height = 20, width = 20, units = 'cm', res = 200)
prettymap({
plot(bound, axes=T)
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i])
}
},
title = 'Plano da Propriedade',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
par(xpd=TRUE)
legend('topleft',
legend = features$idRecomendacao,
fill = NA, border = features$cor)
dev.off()
unique(data.frame(c(1,1), c(2,2), c(3,3)))
unique(c(1,2,3,3,3,4,5,6))
unique(c('a','b','f','f','f','c','e','d'))
paste('proj',unique(features$idRecomendacao))
png(filename = str_c(idPlano,'.png'), height = 20, width = 20, units = 'cm', res = 200)
prettymap({
plot(bound, axes=T)
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i])
}
},
title = 'Plano da Propriedade',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
par(xpd=TRUE)
legend('topleft',
legend = paste('SAF',unique(features$idRecomendacao)),
fill = NA, border = unique(features$cor))
dev.off()
limites
plot(limites[1,], limites[2,], asp=1)
bound
class(bound)
limites
features$shp
sub(pattern = 'MULTIPOLYGON (((', '', features$shp)
sub(pattern = 'MULTIPOLYGON \(\(\(', '', features$shp)
sub(pattern = 'MULTIPOLYGON \\(\\(\\(', '', features$shp)
sub(pattern = 'MULTIPOLYGON', '', features$shp)
sub(pattern = 'MULTIPOLYGON ', '', features$shp)
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
ss
paste(ss, collapse = '')
multi = paste(ss, collapse = '')
multi = sub('\\)\\(', ',', multi)
multi
borda$shp
bound = readWKT(paste('MULTIPOLYGON', multi), p4s = "+init=epsg:4326")
bound
plot(bound)
idPlano = 6
dbhandle = odbcDriverConnect(
'driver={SQL Server};server=18.231.7.174;database=ATER;uid=sa;pwd=Ater_2016#')
baseQuery = "select OBJECTID, idUsuario, flaBorda, nomLocal, idRecomendacao, cor, idBorda, areaHa, Shape.STAsText() as shp from rl.vRLPOLIGONOSAF"
geoQuery = paste(baseQuery, 'where idPlanoPropriedade =', idPlano)
features = sqlQuery(dbhandle, geoQuery, as.is=T)
shp = sapply(features$shp, readWKT, p4s = "+init=epsg:4326")
brd = unique(features$idBorda)
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
ss
multi = paste(ss, collapse = '')
multi
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi
multi = strsplit(multi, ')(', fixed = T)
multi
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi = strsplit(multi, ')(', fixed = T)
multi = paste(multi, collapse = ',')
multi
bound = readWKT(paste('MULTIPOLYGON', multi), p4s = "+init=epsg:4326")
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
ss
multi = paste(ss, collapse = '')
multi
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi = strsplit(multi, '\\)\\(')
multi
multi = paste(multi, collapse = ',')
multi
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi = strsplit(multi, '\\)\\(')
multi
multi = paste(multi[[1]], collapse = ',')
multi
bound = readWKT(paste('MULTIPOLYGON', multi), p4s = "+init=epsg:4326")
odbcCloseAll()
plot(bound)
plot(bound, axes=T)
plot(bound, axes=T, lwd=0)
require(RODBC)
require(rgeos)
require(prettymapr)
require(stringr)
idPlano = 6
dbhandle = odbcDriverConnect(
'driver={SQL Server};server=18.231.7.174;database=ATER;uid=sa;pwd=Ater_2016#')
baseQuery = "select OBJECTID, idUsuario, flaBorda, nomLocal, idRecomendacao, cor, idBorda, areaHa, Shape.STAsText() as shp from rl.vRLPOLIGONOSAF"
geoQuery = paste(baseQuery, 'where idPlanoPropriedade =', idPlano)
features = sqlQuery(dbhandle, geoQuery, as.is=T)
shp = sapply(features$shp, readWKT, p4s = "+init=epsg:4326")
brd = unique(features$idBorda)
if(!is.na(brd)){
boundQuery = paste(baseQuery, 'where OBJECTID =', brd)
borda = sqlQuery(dbhandle, boundQuery, as.is=T)
bound = readWKT(borda$shp, p4s = "+init=epsg:4326")
}else{
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi = strsplit(multi, '\\)\\(')
multi = paste(multi[[1]], collapse = ',')
bound = readWKT(paste('MULTIPOLYGON', multi), p4s = "+init=epsg:4326")
}
odbcCloseAll()
prettymap({
plot(bound, axes=T, lwd=ifelse(is.na(brd), 0, 1))
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i])
}
},
title = 'Plano da Propriedade',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
plot(shp[[i]], add=T, border=features$cor[i], lwd=2)
require(RODBC)
require(rgeos)
require(prettymapr)
require(stringr)
idPlano = 6
dbhandle = odbcDriverConnect(
'driver={SQL Server};server=18.231.7.174;database=ATER;uid=sa;pwd=Ater_2016#')
baseQuery = "select OBJECTID, idUsuario, flaBorda, nomLocal, idRecomendacao, cor, idBorda, areaHa, Shape.STAsText() as shp from rl.vRLPOLIGONOSAF"
geoQuery = paste(baseQuery, 'where idPlanoPropriedade =', idPlano)
features = sqlQuery(dbhandle, geoQuery, as.is=T)
shp = sapply(features$shp, readWKT, p4s = "+init=epsg:4326")
brd = unique(features$idBorda)
if(!is.na(brd)){
boundQuery = paste(baseQuery, 'where OBJECTID =', brd)
borda = sqlQuery(dbhandle, boundQuery, as.is=T)
bound = readWKT(borda$shp, p4s = "+init=epsg:4326")
}else{
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi = strsplit(multi, '\\)\\(')
multi = paste(multi[[1]], collapse = ',')
bound = readWKT(paste('MULTIPOLYGON', multi), p4s = "+init=epsg:4326")
}
odbcCloseAll()
png(filename = str_c(idPlano,'.png'), height = 20, width = 20, units = 'cm', res = 200)
prettymap({
plot(bound, axes=T, lwd=ifelse(is.na(brd), 0, 1))
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i], lwd=2)
}
},
title = 'Plano da Propriedade',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
par(xpd=TRUE)
legend('topleft',
legend = paste('SAF',unique(features$idRecomendacao)),
fill = NA, border = unique(features$cor))
dev.off()
source('C:/Users/Tiago/Desktop/mapR.R', echo=TRUE)
cmd = commandArgs(T)
idPlano = 8
dbhandle = odbcDriverConnect(
'driver={SQL Server};server=18.231.7.174;database=ATER;uid=sa;pwd=Ater_2016#')
baseQuery = "select OBJECTID, idUsuario, flaBorda, nomLocal, idRecomendacao, cor, idBorda, areaHa, Shape.STAsText() as shp from rl.vRLPOLIGONOSAF"
geoQuery = paste(baseQuery, 'where idPlanoPropriedade =', idPlano)
features = sqlQuery(dbhandle, geoQuery, as.is=T)
shp = sapply(features$shp, readWKT, p4s = "+init=epsg:4326")
brd = unique(features$idBorda)
brd
if(!is.na(brd)){
boundQuery = paste(baseQuery, 'where OBJECTID =', brd)
borda = sqlQuery(dbhandle, boundQuery, as.is=T)
bound = readWKT(borda$shp, p4s = "+init=epsg:4326")
}else{
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi = strsplit(multi, '\\)\\(')
multi = paste(multi[[1]], collapse = ',')
bound = readWKT(paste('MULTIPOLYGON', multi), p4s = "+init=epsg:4326")
}
odbcCloseAll()
bound
prettymap({
plot(bound, axes=T, lwd=ifelse(is.na(brd), 0, 1))
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i], lwd=3)
}
},
title = 'Plano da Propriedade - Rural Legal',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
idPlano = 9
dbhandle = odbcDriverConnect(
'driver={SQL Server};server=18.231.7.174;database=ATER;uid=sa;pwd=Ater_2016#')
baseQuery = "select OBJECTID, idUsuario, flaBorda, nomLocal, idRecomendacao, cor, idBorda, areaHa, Shape.STAsText() as shp from rl.vRLPOLIGONOSAF"
geoQuery = paste(baseQuery, 'where idPlanoPropriedade =', idPlano)
features = sqlQuery(dbhandle, geoQuery, as.is=T)
shp = sapply(features$shp, readWKT, p4s = "+init=epsg:4326")
brd = unique(features$idBorda)
brd
if(!is.na(brd)){
boundQuery = paste(baseQuery, 'where OBJECTID =', brd)
borda = sqlQuery(dbhandle, boundQuery, as.is=T)
bound = readWKT(borda$shp, p4s = "+init=epsg:4326")
}else{
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi = strsplit(multi, '\\)\\(')
multi = paste(multi[[1]], collapse = ',')
bound = readWKT(paste('MULTIPOLYGON', multi), p4s = "+init=epsg:4326")
}
odbcCloseAll()
bound
prettymap({
plot(bound, axes=T, lwd=ifelse(is.na(brd), 0, 1))
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i], lwd=3)
}
},
title = 'Plano da Propriedade - Rural Legal',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
is.na(brd)
ifelse(is.na(brd), 0, 1)
plot(bound, axes=T, lwd=ifelse(is.na(brd), 0, 1))
plot(bound, axes=T, lwd=ifelse(is.na(brd), NA, 1))
plot(bound, axes=T, lwd=1)
plot(bound, axes=T, lwd=.1)
plot(bound, axes=T, lwd=0)
plot(bound, axes=T, lwd=NULL)
plot(bound, axes=T, lwd=NA)
plot(bound, axes=T, lty=1)
plot(bound, axes=T, lty=0)
dbhandle = odbcDriverConnect(
'driver={SQL Server};server=18.231.7.174;database=ATER;uid=sa;pwd=Ater_2016#')
baseQuery = "select OBJECTID, idUsuario, flaBorda, nomLocal, idRecomendacao, cor, idBorda, areaHa, Shape.STAsText() as shp from rl.vRLPOLIGONOSAF"
geoQuery = paste(baseQuery, 'where idPlanoPropriedade =', idPlano)
features = sqlQuery(dbhandle, geoQuery, as.is=T)
shp = sapply(features$shp, readWKT, p4s = "+init=epsg:4326")
brd = unique(features$idBorda)
if(!is.na(brd)){
boundQuery = paste(baseQuery, 'where OBJECTID =', brd)
borda = sqlQuery(dbhandle, boundQuery, as.is=T)
bound = readWKT(borda$shp, p4s = "+init=epsg:4326")
}else{
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi = strsplit(multi, '\\)\\(')
multi = paste(multi[[1]], collapse = ',')
bound = readWKT(paste('MULTIPOLYGON', multi), p4s = "+init=epsg:4326")
}
odbcCloseAll()
prettymap({
plot(bound, axes=T, lty=ifelse(is.na(brd), 0, 1))
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i], lwd=3)
}
},
title = 'Plano da Propriedade - Rural Legal',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
print(getwd())
idPlano = 9
dbhandle = odbcDriverConnect(
'driver={SQL Server};server=18.231.7.174;database=ATER;uid=sa;pwd=Ater_2016#')
baseQuery = "select OBJECTID, idUsuario, flaBorda, nomLocal, idRecomendacao, cor, idBorda, areaHa, Shape.STAsText() as shp from rl.vRLPOLIGONOSAF"
geoQuery = paste(baseQuery, 'where idPlanoPropriedade =', idPlano)
features = sqlQuery(dbhandle, geoQuery, as.is=T)
shp = sapply(features$shp, readWKT, p4s = "+init=epsg:4326")
brd = unique(features$idBorda)
if(!is.na(brd)){
boundQuery = paste(baseQuery, 'where OBJECTID =', brd)
borda = sqlQuery(dbhandle, boundQuery, as.is=T)
bound = readWKT(borda$shp, p4s = "+init=epsg:4326")
}else{
ss = sub(pattern = 'MULTIPOLYGON ', '', features$shp)
multi = paste(ss, collapse = '')
multi = strsplit(multi, '\\)\\(')
multi = paste(multi[[1]], collapse = ',')
bound = readWKT(paste('MULTIPOLYGON', multi), p4s = "+init=epsg:4326")
}
odbcCloseAll()
png(filename = str_c('mapas/',idPlano,'.png'), height = 20, width = 20, units = 'cm', res = 200)
prettymap({
plot(bound, axes=T, lty=ifelse(is.na(brd), 0, 1))
for(i in 1:length(shp)){
plot(shp[[i]], add=T, border=features$cor[i], lwd=3)
}
},
title = 'Plano da Propriedade - Rural Legal',
scale.plotepsg = 4326, scale.padin = c(.05,.05),
scale.labelpadin = .025,
drawarrow = T, arrow.padin = c(.05,.05),
arrow.scale = 1,
mai = rep(.5,4))
idReco = unique(features$idRecomendacao)
par(xpd=TRUE)
legend('topleft',
legend = paste('SAF',ifelse(is.na(idReco), 'não atribuído', idReco)),
fill = NA, border = unique(features$cor))
dev.off()
print(getwd())
getwd()
print(getwd())
version
install.packages("OpenStreetMap")
require(OpenStreetMap)
openmap()
openmap(lat <- c(59.7916,59.6563)
lon <- c(10.0937,10.3293)
map <- openmap(c(lat[1],lon[1]),c(lat[2],lon[2]),zoom=10,'osm')
plot(map))
lat <- c(59.7916,59.6563)
lon <- c(10.0937,10.3293)
map <- openmap(c(lat[1],lon[1]),c(lat[2],lon[2]),zoom=10,'osm')
plot(map)
axes()
axis()
axis(1)
axis(2)
axis(3)
axis(5)
axis(4)
setwd('../Desktop/pcap2cloud')
require(rgl)
require(lidR)
class(1)
a = read.table('luizq.txt', header = T, colClasses = 'numeric')
head(a)
head(a)
b = a[1:1000,]
require(rgl)
b = a[1:1000,c('x', 'y', 'z')]
rgl.points(b)
b = a[1:100,c('x', 'y', 'z')]
rgl.points(b)
b = a[1:10000,c('x', 'y', 'z')]
rgl.points(b)
b = a[1:50000,c('x', 'y', 'z')]
rgl.points(b)
b = a[1:20000,c('x', 'y', 'z')]
rgl.points(b)
head(a)
bt = as.raw(c('b9','89','68', '0f'))
bt = c('b9','89','68', '0f')
bt = as.raw(c('0xb9','0x89','0x68', '0x0f'))
bt
rawToChar(bt)
bt = '0xb989680f'
strtoi(bt)
bt
bt = as.raw(c('0xb9','0x89','0x68', '0x0f'))
bt
rawToChar(bt)
bt
strtoi(bt)
strtoi(as.character(bt))
strtoi(paste(as.character(bt), collapse = ''))
strtoi('0x69791810')
strtoi('0xb989680f')
head(a)
strtoi('0xb989b2d3')
strtoi('0xbb56fb31')
dim(a)
as.character('0xbb56fb31')
as.raw('0xbb56fb31')
as.raw(c('0xbb','0x56', '0xfb','0x31'))
rr = as.raw(c('0xbb','0x56', '0xfb','0x31'))
r
rr
rawToChar(rr)
charToRaw(rawToChar(rr))
strtoi('0xbca0068c')
byte = readBin('luizq.pcap', size = 100000)
byte = readBin('luizq.pcap',what = 'raw', size = 100000)
byte = readBin('luizq.pcap',what = 'raw', size = 1, n = 100000)
byte
head(byte)
byte[:10]
byte[1:30]
strtoi('0x680978e4')
byte
which(byte == '0x00')
which(byte == '00')
which(byte == '24')
which(byte == '24' & byte[-1] == 47)
byte[8228:8250]
which(byte == '24' & byte[-1] == '47')
byte[1553:1570]
byte[1540:1570]
strtoi('0xb9')
strtoi('0xb989')
strtoi('0xb98960')
strtoi('0xb98960d5')
strtoi('0xd5')
strtoi(c('0xb9','0x89','0x60','0xd5'))
strtoi(c('0x69','0x79','0x18','0x10'))
strtoi(c('0x69791810'))
charToRaw('$GPRMC')
head(a)
head(a)
tail(a)
a = read.table('luizq.txt', header = T, colClasses = 'numeric')
head(a)
tail(a)
